# https://taskfile.dev
# We assume NPM is available on the system where taskfile is run. NPM is the source of packagey truth

version: '3'

vars:
  # We can parameterize the npm repo if necessary, right now we assume everything comes from published stable as truth.
  VERSION: $(npm view @useoptic/cli version)
  URL: $(npm view @useoptic/cli dist.tarball)
  SHASUM: $(curl -s  {{.URL}} | shasum -a 256 | awk '{print $1}')

tasks:
  default:
    cmds:
      - task --list
    silent: true

  create-formula-dir:
    cmds:
      - mkdir Formula
    status:
      - test -d Formula
    silent: true
  clean:
    cmds:
      - rm -f Formula/api.rb
    silent: true

  get-stats:
    desc: "[DIAG] show the current version of Optic CLI"
    cmds:
      - "echo \"Version      : {{.VERSION}} \""
      - "echo \"SHA256       : {{.SHASUM}} \""
      - "echo \"URL          : {{.URL}} \""
    silent: true

  generate-formula:
    desc: "[SRV] Generates a new api formula based on the latest NPM package"
    deps: [ create-formula-dir ]
    sources: 
      - api-template.rb
    generates:
      - Formula/api.rb
    cmds:
      - sed 's|{URL}|{{.URL}}|g' api-template.rb > Formula/api.rb
      - sed -i '' 's|{SHASUM}|{{.SHASUM}}|g' Formula/api.rb
    silent: true

  brew-audit:
    desc: "[SRV] Audits formula for best practices"
    deps: [ generate-formula ]
    cmds: 
      - brew audit --strict --online --formula ./Formula/api.rb
    silent: true

  brew-commit:
    desc: "[SRV] commits a change to the local repository (required for brew test, which clones the repo)"
    cmds:
      - git add Formula/api.rb
      - git -c user.email=action@github.com -c user.name='GitHub Package Updater' commit -m 'Updated Formula'
    status:
      - "! [ -n \"$(git status --porcelain)\" ]"
    silent: true

  brew-test:
    # This needs to check for an existing tap definition and remove it (or force the new tap).
    # In CI this doesn't matter much, but locally an existing test tap will break local testing.
    # uninstall/untap only if a tap exists would be a sensible dependency
    desc: "[SRV] Runs `brew test` for the local package"
    deps: 
      - generate-formula
      - brew-commit
    cmds: 
      - brew tap optictest/apitest .
      - brew install optictest/apitest/api
      - brew test --verbose optictest/apitest/api
      - brew uninstall optictest/apitest/api
      - brew untap optictest/apitest
    silent: true

  build:
    desc: Builds a new brew formula from scratch and runs audit, test to validate it
    cmds:
      - task: clean
      - task: generate-formula
      - task: brew-audit
      - task: brew-test
    silent: true
